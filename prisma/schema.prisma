// // This is your Prisma schema file,
// // learn more about it in the docs: https://pris.ly/d/prisma-schema

// // Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// // Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id Int @id @default(autoincrement()) @unique
  firstName String
  lastName String
  email String @unique
  role Role
  password String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  exercises Exercise[]
  workouts Workout[]
}

model Exercise {
  id  Int @id @default(autoincrement())
  name  String 
  duration String
  sets Int
  repetitions Int
  volume Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt   
  owner User? @relation(fields: [ownerId], references: [id])
  ownerId Int? 
  workout Workout? @relation(fields: [workoutId], references: [id])
  workoutId Int?
}

model Workout {
  id  Int @id @default(autoincrement())  
  name String
  duration String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt   
  owner User? @relation(fields: [ownerId], references: [id])
  ownerId Int?
  exercises Exercise[]
}

enum Role {
  FREE
  ADMIN
}


// Example of a prisma schema: 
// https://github.com/prisma/prisma-examples/blob/latest/typescript/rest-nestjs/prisma/schema.prisma